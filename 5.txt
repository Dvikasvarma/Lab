5. a) Learn about stateful and stateless widgets 
PROGRAM: 
import 'package:flutter/material.dart'; 
 
void main() { 
  runApp(MyApp()); 
} 
 
class MyApp extends StatelessWidget { 
  @override 
  Widget build(BuildContext context) { 
    return MaterialApp( 
      home: Scaffold( 
        appBar: AppBar( 
          title: Text('Cards Example'), 
        ), 
        body: CardList(), 
      ), 
    ); 
  } 
} 
 
class CardList extends StatelessWidget { 
  @override 
  Widget build(BuildContext context) { 
    return ListView.builder( 
      itemCount: 10, 
      itemBuilder: (context, index) { 
        return CardItem( 
          title: 'Card $index', 
          subtitle: 'Subtitle $index', 
        ); 
      }, 
    ); 
  } 
} 
 
class CardItem extends StatelessWidget { 
EXP NO: PAGE NO: 32  
DATE: 
 
Aditya College of Engineering and Technology (A)         Reg No:  
2 3 P 3 1 A 4  2   
  
  final String title; 
  final String subtitle; 
 
  const CardItem({ 
    Key? key, 
    required this.title, 
    required this.subtitle, 
  }) : super(key: key); 
 
  @override 
  Widget build(BuildContext context) { 
    return Card( 
      margin: EdgeInsets.symmetric(horizontal: 16, vertical: 8), 
      child: ListTile( 
        title: Text(title), 
        subtitle: Text(subtitle), 
        leading: CircleAvatar( 
          child: Text(title.substring(0, 1)), 
        ), 
        onTap: () { 
          // Handle card tap 
        }, 
      ), 
    ); 
  } 
} 


10A

import 'package:flutter/material.dart'; 
import 'package:flutter_test/flutter_test.dart'; 
import 'package:untitled9/post_card.dart'; // Import your widget file 
 
void main() { 
  testWidgets('PostCard displays title and body', (WidgetTester tester) async { 
// Build our widget and trigger aframe. 
    await tester.pumpWidget( 
    MaterialApp( home: 
    PostCard( title: 'Test Title', 
    body: 'Test Body', 
    ), 
    ), 
    ); 
 
// Verify that the title and body are displayed correctly. 
    expect(find.text('Test Title'), 
    findsOneWidget); expect(find.text('Test Body'), 
    findsOneWidget); 
  }); 
 
  testWidgets('PostCard widget has correct styling', (WidgetTester tester) async { 
// Build our widget and trigger a frame. 
    await tester.pumpWidget( 
    MaterialApp( home: 
    PostCard( title: 'Test Title', 
        body: 'Test Body', 
    ), 
    ), 
    ); 
 
// Verify that the text styles are applied correctly.  
    final titleText = tester.widget<Text>(find.text('Test Title')); 
    expect(titleText.style?.fontSize, 18); 
    expect(titleText.style?.fontWeight, FontWeight.bold); 
 
    final bodyText = tester.widget<Text>(find.text('Test Body')); 

  
    expect(bodyText.style?.fontSize, 16); 
  }); 
} 